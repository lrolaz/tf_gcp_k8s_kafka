---
apiVersion: kafka.lrolaz.io/v1alpha1
kind: KafkaTopic
metadata:
  name: example11
  namespace: kube-public
spec:
  topicName: example11
  partitions: 1
  replicas: 1
  config:
    compression.type: "producer"
    cleanup.policy: "delete"
    retention.ms: "604800000"
    max.message.bytes: "10485"
    retention.bytes: "-1"
---
apiVersion: v1
kind: Pod
metadata:
  name: example-consumer
  namespace: kube-public
spec: 
  containers:
  - name: example-consumer
    image: strimzi/kafka:latest
    resources:
      limits:
        memory: "200Mi"
      requests:
        memory: "100Mi"
    command: 
    - sh
    - -exc
    - |
      exec bin/kafka-console-consumer.sh --bootstrap-server kafka-cp-kafka-headless.kube-kafka.svc.cluster.local:9093 \
      --topic example11 \
      --from-beginning \
      --group example-consumer01 \
      --consumer-property security.protocol=SSL \
      --consumer-property ssl.truststore.location=/etc/kafka/tls/truststore.jks \
      --consumer-property ssl.truststore.password=$(cat /etc/kafka/tls/truststore.password) \
      --consumer-property ssl.keystore.location=/etc/kafka/tls/keystore.jks \
      --consumer-property ssl.keystore.password=$(cat /etc/kafka/tls/keystore.password) \
      --consumer-property ssl.key.password=$(cat /etc/kafka/tls/keystore.password) 
    volumeMounts:
      - name: kafka-keystore
        mountPath: /etc/kafka/tls   
  volumes:
    - name: kafka-keystore
      secret:
        secretName: kafka-user01-certificate

---
apiVersion: v1
kind: Pod
metadata:
  name: example-producer
  namespace: kube-public
spec:  
  containers:
  - name: example-producer
    image: strimzi/kafka:latest
    resources:
      limits:
        memory: "200Mi"
      requests:
        memory: "100Mi"
    command: 
    - sh
    - -exc
    - |
      exec bin/kafka-producer-perf-test.sh \
      --topic example11 \
      --num-records 100000 --throughput 10 --record-size 10 \
      --producer-props bootstrap.servers=kafka-cp-kafka-headless.kube-kafka.svc.cluster.local:9093 \
      security.protocol=SSL \
      ssl.truststore.location=/etc/kafka/tls/truststore.jks \
      ssl.truststore.password=$(cat /etc/kafka/tls/truststore.password) \
      ssl.keystore.location=/etc/kafka/tls/keystore.jks \
      ssl.keystore.password=$(cat /etc/kafka/tls/keystore.password) \
      ssl.key.password=$(cat /etc/kafka/tls/keystore.password)     
    volumeMounts:
      - name: kafka-keystore
        mountPath: /etc/kafka/tls   
  volumes:
    - name: kafka-keystore
      secret:
        secretName: kafka-user01-certificate
  restartPolicy: Never 
   