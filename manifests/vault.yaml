---
apiVersion: v1
kind: Service
metadata:
  name: vault
  namespace: kube-security   
  labels:
    app: vault
spec:
  type: LoadBalancer
  loadBalancerIP: 35.241.130.246
  selector:
    app: vault
  ports:
  - name: vault-port
    port: 8200
    targetPort: 8200
    protocol: TCP

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vault
  namespace: kube-security   
  labels:
    app: vault
spec:
  serviceName: vault
  replicas: 1
  selector:
    matchLabels:
      app: vault
  template:
    metadata:
      labels:
        app: vault
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values: ['vault']
            topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 10
      containers:
      - name: vault-init
        image: registry.hub.docker.com/sethvargo/vault-init:0.1.1
        imagePullPolicy: Always
        resources:
          requests:
            cpu: '100m'
            memory: '64Mi'
        env:
        - name: "GOOGLE_APPLICATION_CREDENTIALS"
          value: "/var/run/secret/cloud.google.com/vault-server.json"
        - name: "PROJECT_ID"
          valueFrom:
            configMapKeyRef:
              name: vault
              key: project_id     
        - name: CHECK_INTERVAL
          value: "30"
        - name: GCS_BUCKET_NAME
          valueFrom:
            configMapKeyRef:
              name: vault
              key: gcs_bucket_name
        - name: KMS_KEY_ID
          valueFrom:
            configMapKeyRef:
              name: vault
              key: kms_key_id
        volumeMounts:
        - name: "service-account"
          mountPath: "/var/run/secret/cloud.google.com"                
      - name: vault
        image: registry.hub.docker.com/library/vault:0.11.1
        imagePullPolicy: Always
        args: ['server']
        securityContext:
          capabilities:
            add: ['IPC_LOCK']
        ports:
        - containerPort: 8200
          name: vault-port
          protocol: TCP
        - containerPort: 8201
          name: cluster-port
          protocol: TCP
        resources:
          requests:
            cpu: '100m'
            memory: '128Mi'
        volumeMounts:
        - name: vault-tls
          mountPath: /etc/vault/tls
        - name: "service-account"
          mountPath: "/var/run/secret/cloud.google.com"          
        env:
        - name: "GOOGLE_APPLICATION_CREDENTIALS"
          value: "/var/run/secret/cloud.google.com/vault-server.json"
        - name: "PROJECT_ID"
          valueFrom:
            configMapKeyRef:
              name: vault
              key: project_id           
        - name: POD_IP_ADDR
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: LOAD_BALANCER_ADDR
          valueFrom:
            configMapKeyRef:
              name: vault
              key: load_balancer_address
        - name: GCS_BUCKET_NAME
          valueFrom:
            configMapKeyRef:
              name: vault
              key: gcs_bucket_name
        - name: VAULT_LOCAL_CONFIG
          value: |
            api_addr     = "https://$(LOAD_BALANCER_ADDR):8200"
            cluster_addr = "https://$(POD_IP_ADDR):8201"

            ui = true

            storage "gcs" {
              bucket     = "$(GCS_BUCKET_NAME)"
              ha_enabled = "true"
            }

            listener "tcp" {
              address       = "0.0.0.0:8200"
              tls_cert_file = "/etc/vault/tls/vault.crt"
              tls_key_file  = "/etc/vault/tls/vault.key"

              tls_disable_client_certs = true
            }
        readinessProbe:
          httpGet:
            path: /v1/sys/health?standbyok=true
            port: 8200
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: vault-tls
        secret:
          secretName: vault-tls
      - name: "service-account"
        secret:
          secretName: "vault-server"     

               